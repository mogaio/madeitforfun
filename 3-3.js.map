{"version":3,"sources":["webpack:///./src/classes/motionTracker.ts"],"names":["MotionTrackerEvent","Event","MotionTracker","player","super","canvas","document","createElement","currentPyramid","pyramid_t","previousPyramid","pointStatus","Uint8Array","previousXY","Float32Array","currentXY","pointCount","windowSize","maxIterations","epsilon","minEigen","this","context","getContext","loadPromise","size","getAspectSize","allocate","U8_t","C1_t","width","height","buildPyramidFromVideoImage","run","video","currentTime","x","y","pyramid","drawImage","imageData","getImageData","currentData","data","imgproc","grayscale","build","frame","tempXY","tempPyramid","optical_flow_lk","track","prunePoints","toSend","found","progress","dispatchEvent","i","j"],"mappings":"sgBAKO,MAAMA,UAA2BC,OAUjC,MAAMC,UAAsB,IAyBjC,YAAoBC,GAClBC,MAAMD,GAzBS,KAAAE,OAASC,SAASC,cAAc,UAIzC,KAAAC,eAAiB,IAAI,IAAOC,UAAU,GAEtC,KAAAC,gBAAkB,IAAI,IAAOD,UAAU,GAE9B,KAAAE,YAAc,IAAIC,WAAW,KAEtC,KAAAC,WAAa,IAAIC,aAAa,KAE9B,KAAAC,UAAY,IAAID,aAAa,KAE7B,KAAAE,WAAa,EAEJ,KAAAC,WAAa,GAEb,KAAAC,cAAgB,GAEhB,KAAAC,QAAU,KAEV,KAAAC,SAAW,KAI1BC,KAAKC,QAAUD,KAAKhB,OAAOkB,WAAW,MAG3B,Q,+CACLF,KAAKlB,OAAOqB,YAClB,MAAMC,EAAOJ,KAAKlB,OAAOuB,gBAEzBL,KAAKb,eAAemB,SAASF,EAAK,GAAIA,EAAK,GAAI,IAAOG,KAAO,IAAOC,MACpER,KAAKX,gBAAgBiB,SAASF,EAAK,GAAIA,EAAK,GAAI,IAAOG,KAAO,IAAOC,OAGnER,KAAKhB,OAAOyB,MACZT,KAAKhB,OAAO0B,QACVN,EAEJJ,KAAKW,2BAA2BX,KAAKb,sBAE/Ba,KAAKY,IAAIZ,KAAKlB,OAAO+B,MAAMC,aAAa,MAGzC,SAAUC,EAAWC,GAC1BhB,KAAKN,UAAUM,KAAKL,YAAc,GAAKoB,EACvCf,KAAKN,UAAmC,GAAxBM,KAAKL,YAAc,IAAUqB,IAC3ChB,KAAKL,WAGD,2BAA4BsB,GAClC,MAAMb,EAAOJ,KAAKlB,OAAOuB,gBAEzBL,KAAKC,QAAQiB,UAAUlB,KAAKlB,OAAO+B,MAAO,EAAG,EAAGT,EAAK,GAAIA,EAAK,IAC9D,MAAMe,EAAYnB,KAAKC,QAAQmB,aAAa,EAAG,EAAGhB,EAAK,GAAIA,EAAK,KAEzDiB,GAAeJ,EAAQK,KAC9B,IAAOC,QAAQC,UAAUL,EAAUG,KAAMlB,EAAK,GAAIA,EAAK,GAAIiB,GAE3DJ,EAAQQ,MAAMJ,GAAa,GAGb,QAASK,G,yCACvB,MAAMC,EAAS3B,KAAKR,WACpBQ,KAAKR,WAAaQ,KAAKN,UACvBM,KAAKN,UAAYiC,EAEjB,MAAMC,EAAc5B,KAAKX,gBACzBW,KAAKX,gBAAkBW,KAAKb,eAC5Ba,KAAKb,eAAiByC,EAEtB5B,KAAKW,2BAA2BX,KAAKb,gBAErC,IAAO0C,gBAAgBC,MACrB9B,KAAKX,gBACLW,KAAKb,eACLa,KAAKR,WACLQ,KAAKN,UACLM,KAAKL,WACLK,KAAKJ,WACLI,KAAKH,cACLG,KAAKV,YACLU,KAAKF,QACLE,KAAKD,UAGPC,KAAK+B,cAEL,MAAMC,EAAS,IAAIrD,EAAmB,SACd,IAApBqB,KAAKL,aACPqC,EAAOC,OAAQ,GAEbD,EAAOjB,EACPiB,EAAOhB,GACLhB,KAAKN,WAEXsC,EAAOE,SAAWR,EAAMQ,SACxBlC,KAAKmC,cAAcH,MAGb,cACN,IAAII,EAAI,EACJC,EAAI,EAER,KAAOD,EAAIpC,KAAKL,aAAcyC,EACA,IAAxBpC,KAAKV,YAAY8C,KACfC,EAAID,IACNpC,KAAKN,UAAU2C,GAAK,GAAKrC,KAAKN,UAAU0C,GAAK,GAC7CpC,KAAKN,UAAqB,GAAV2C,GAAK,IAAUrC,KAAKN,UAAqB,GAAV0C,GAAK,OAEpDC,GAGNrC,KAAKL,WAAa0C","file":"3-3.js","sourcesContent":["/* eslint-disable new-cap */\nimport {VideoSeeker, VideoSeekerFrame} from \"./videoSeeker\";\nimport {VideoPlayer} from \"./videoPlayer\";\nimport jsfeat from \"jsfeat\";\n\nexport class MotionTrackerEvent extends Event {\n  public progress: number;\n\n  public found: boolean;\n\n  public x: number;\n\n  public y: number;\n}\n\nexport class MotionTracker extends VideoSeeker {\n  private readonly canvas = document.createElement(\"canvas\");\n\n  private readonly context: CanvasRenderingContext2D;\n\n  private currentPyramid = new jsfeat.pyramid_t(3);\n\n  private previousPyramid = new jsfeat.pyramid_t(3);\n\n  private readonly pointStatus = new Uint8Array(100);\n\n  private previousXY = new Float32Array(100 * 2);\n\n  private currentXY = new Float32Array(100 * 2);\n\n  private pointCount = 0;\n\n  private readonly windowSize = 40;\n\n  private readonly maxIterations = 50;\n\n  private readonly epsilon = 0.001;\n\n  private readonly minEigen = 0.0001;\n\n  public constructor (player: VideoPlayer) {\n    super(player);\n    this.context = this.canvas.getContext(\"2d\");\n  }\n\n  public async track () {\n    await this.player.loadPromise;\n    const size = this.player.getAspectSize();\n\n    this.currentPyramid.allocate(size[0], size[1], jsfeat.U8_t | jsfeat.C1_t);\n    this.previousPyramid.allocate(size[0], size[1], jsfeat.U8_t | jsfeat.C1_t);\n\n    [\n      this.canvas.width,\n      this.canvas.height\n    ] = size;\n\n    this.buildPyramidFromVideoImage(this.currentPyramid);\n\n    await this.run(this.player.video.currentTime, true);\n  }\n\n  public addPoint (x: number, y: number) {\n    this.currentXY[this.pointCount << 1] = x;\n    this.currentXY[(this.pointCount << 1) + 1] = y;\n    ++this.pointCount;\n  }\n\n  private buildPyramidFromVideoImage (pyramid: any) {\n    const size = this.player.getAspectSize();\n\n    this.context.drawImage(this.player.video, 0, 0, size[0], size[1]);\n    const imageData = this.context.getImageData(0, 0, size[0], size[1]);\n\n    const [currentData] = pyramid.data;\n    jsfeat.imgproc.grayscale(imageData.data, size[0], size[1], currentData);\n\n    pyramid.build(currentData, true);\n  }\n\n  protected async onFrame (frame: VideoSeekerFrame) {\n    const tempXY = this.previousXY;\n    this.previousXY = this.currentXY;\n    this.currentXY = tempXY;\n\n    const tempPyramid = this.previousPyramid;\n    this.previousPyramid = this.currentPyramid;\n    this.currentPyramid = tempPyramid;\n\n    this.buildPyramidFromVideoImage(this.currentPyramid);\n\n    jsfeat.optical_flow_lk.track(\n      this.previousPyramid,\n      this.currentPyramid,\n      this.previousXY,\n      this.currentXY,\n      this.pointCount,\n      this.windowSize,\n      this.maxIterations,\n      this.pointStatus,\n      this.epsilon,\n      this.minEigen\n    );\n\n    this.prunePoints();\n\n    const toSend = new MotionTrackerEvent(\"frame\");\n    if (this.pointCount !== 0) {\n      toSend.found = true;\n      [\n        toSend.x,\n        toSend.y\n      ] = this.currentXY;\n    }\n    toSend.progress = frame.progress;\n    this.dispatchEvent(toSend);\n  }\n\n  private prunePoints () {\n    let i = 0;\n    let j = 0;\n\n    for (; i < this.pointCount; ++i) {\n      if (this.pointStatus[i] === 1) {\n        if (j < i) {\n          this.currentXY[j << 1] = this.currentXY[i << 1];\n          this.currentXY[(j << 1) + 1] = this.currentXY[(i << 1) + 1];\n        }\n        ++j;\n      }\n    }\n    this.pointCount = j;\n  }\n}\n"],"sourceRoot":""}